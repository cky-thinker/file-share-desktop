name: Build

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
#  unix:
#    runs-on: ${{ matrix.os }}
#    continue-on-error: false
#    timeout-minutes: 45
#
#    strategy:
#      matrix:
#        os: [macos-11, ubuntu-latest]
#
#    env:
#      DISPLAY: ":99.0"
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#    steps:
#      - name: Check out Git repository
#        uses: actions/checkout@v2
#
#      - name: Install Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 18
#          check-latest: true
#          cache: npm
#
#      - name: Install build dependencies
#        if: runner.os == 'Linux'
#        #                         electron-builder                 | keyboard-layout         | keytar                      | fontmanager
#        run: |
#          sudo apt-get -y update
#          sudo apt-get install -y icnsutils graphicsmagick xz-utils libx11-dev libxkbfile-dev gnome-keyring libsecret-1-dev libfontconfig-dev
#
#      - name: Cache node_modules
#        uses: actions/cache@v2
#        id: cacheNodeModules
#        with:
#          path: ${{ github.workspace }}/node_modules
#          key: ${{ runner.os }}-node_modules-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
#          restore-keys: |
#            ${{ runner.os }}-node_modules-cache-v1-
#
#      - name: Cache Electron
#        uses: actions/cache@v2
#        with:
#          path: ${{ env.HOME }}/.cache/electron
#          key: ${{ runner.os }}-electron-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
#
#      - name: Cache Electron-Builder
#        uses: actions/cache@v2
#        with:
#          path: ${{ env.HOME }}/.cache//electron-builder
#          key: ${{ runner.os }}-electron-builder-cache-v1-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
#
#      - name: Install dependencies
#        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
#        run: yarn install --check-files --frozen-lockfile
#
#      - name: Lint
#        run: |
#          yarn run lint
#          yarn run validate-licenses
#
#      - name: Run unit and E2E tests
#        uses: GabrielBB/xvfb-action@v1
#        with:
#          run: yarn run test
#
#      - name: Build
#        run: yarn build:bin

  windows:
    runs-on: windows-latest
    continue-on-error: false
    timeout-minutes: 45

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          check-latest: true

      # Workaround: Fix native build failure due to outdated node-gyp version.
      - name: Fix node-gyp
        run: |
          npm install --global node-gyp@latest
          npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
          node-gyp install
        shell: pwsh

      - name: Cache Electron
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron\Cache
          key: ${{ runner.os }}-electron-cache-v2-${{ hashFiles(format('{0}{1}', github.workspace, '\electron\package-lock.json')) }}

      - name: Cache Electron-Builder
        uses: actions/cache@v2
        with:
          path: ${{ env.LOCALAPPDATA }}\electron-builder\cache
          key: ${{ runner.os }}-electron-builder-cache-v2-${{ hashFiles(format('{0}{1}', github.workspace, '\electron\package-lock.json')) }}

      - name: Cache electron dir node_modules
        uses: actions/cache@v2
        id: cacheElectronDirNodeModules
        with:
          path: ${{ github.workspace }}\electron\node_modules
          key: ${{ runner.os }}-electron-dir-node_modules-cache-v2-${{ hashFiles(format('{0}{1}', github.workspace, '\electron\package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-electron-dir-node_modules-cache-v2-

      - name: Cache app dir node_modules
        uses: actions/cache@v2
        id: cacheAppDirNodeModules
        with:
          path: ${{ github.workspace }}\page_app\node_modules
          key: ${{ runner.os }}-app-dir-node_modules-cache-v2-${{ hashFiles(format('{0}{1}', github.workspace, '\page_app\package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-app-dir-node_modules-cache-v2-

      - name: Cache web dir node_modules
        uses: actions/cache@v2
        id: cacheWebDirNodeModules
        with:
          path: ${{ github.workspace }}\page_web\node_modules
          key: ${{ runner.os }}-web-dir-node_modules-cache-v2-${{ hashFiles(format('{0}{1}', github.workspace, '\page_web\package-lock.json')) }}
          restore-keys: |
            ${{ runner.os }}-web-dir-node_modules-cache-v2-

      - name: Install page_app dependencies
        working-directory: ./page_app
        run: npm install

      - name: Install page_web dependencies
        working-directory: ./page_web
        run: npm install

      - name: Install electron dependencies
        working-directory: ./electron
        run: npm install && mkdir dist
        shell: bash

      - name: Build page_app
        working-directory: ./page_app
        run: npm run build
        shell: bash

      - name: Build page_web
        working-directory: ./page_web
        run: npm run build
        shell: bash

      - name: Build electron
        working-directory: ./electron
        run: npm run release:win
        shell: bash

      - name: Calculate checksums
        run: |
          get-filehash -Algorithm SHA256 "electron\build\fileshare-setup.exe"
        shell: pwsh

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: electron/build/fileshare-setup.exe